% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BlockedCrossValidation.R
\name{cross_validate_partition}
\alias{cross_validate_partition}
\title{Cross-Validate Partition for SVR Model}
\usage{
cross_validate_partition(
  cost,
  nu,
  gamma = NULL,
  data_partitions,
  bcv_folds = 5,
  signal_norm_names,
  predictors_norm_names,
  lagged_cols,
  combined_col_lags,
  vsvr_response,
  vsvr_tolerance = 1,
  silent = TRUE,
  training_list_name = "training",
  validation_list_name = "validation",
  svm_cache_size = 100,
  generate_response_predictions_cv = TRUE,
  col_lags = NULL,
  response_lags = NULL,
  initial_column_values = NULL,
  prediction_initial_value = NULL,
  data_env_list = NULL
)
}
\arguments{
\item{cost}{Numeric. The cost parameter for the SVR model.}

\item{nu}{Numeric. The nu parameter for the SVR model.}

\item{gamma}{(Optional) Numeric. The gamma parameter for the SVR model.
Defaults to NULL.}

\item{data_partitions}{List of dataframes. The data partitions to use for
training and validation.}

\item{bcv_folds}{(Optional) Numeric. Number of cross-validation folds.
Defaults to 5.}

\item{signal_norm_names}{Character vector. Normalized signal column names.}

\item{predictors_norm_names}{Character vector. Normalized predictor column
names.}

\item{lagged_cols}{Character vector. Names of lagged columns.}

\item{combined_col_lags}{Numeric vector indicating the combined lags of the
predictor and response columns.}

\item{vsvr_response}{Character. Response column name for the SVR model.}

\item{vsvr_tolerance}{(Optional) Numeric. Tolerance parameter for the SVR
model. Defaults to 1.}

\item{silent}{(Optional) Logical. Determines if the function should run
silently. Defaults to TRUE.}

\item{training_list_name}{(Optional) Character. Name of the training data
list element. Defaults to "training".}

\item{validation_list_name}{(Optional) Character. Name of the validation
data list element. Defaults to "validation".}

\item{svm_cache_size}{Numeric. Cache size for the SVR model. Defaults to 100.}

\item{generate_response_predictions_cv}{Logical. Controls generation of
response predictions. Defaults to TRUE.}

\item{col_lags}{(Optional) Numeric/Integer vector. Specifies column lags for
response prediction.}

\item{response_lags}{(Optional) Numeric/Integer. Lags for the response
variable.}

\item{initial_column_values}{(Optional) Numeric vector/list. Initial values
for each column.}

\item{prediction_initial_value}{(Optional) Numeric. Initial value for
prediction.}

\item{data_env_list}{(Optional) List. Additional data structures for
response prediction.}
}
\value{
A list containing various metrics and information from the
 cross-validation process:
\itemize{
  \item \code{avg_cor}: Average correlation across all folds.
  \item \code{avg_error}: Average mean squared error across all folds.
  \item \code{na_count}: Count of NA values encountered during computation.
  \item \code{warnings}: Count of warnings generated by the SVR model.
  \item \code{cv_predictions}: List of prediction-related data if
   \code{generate_response_predictions_cv} is TRUE.
  \item \code{time}: The time taken to execute the cross-validation process,
   measured in seconds.
  \item \code{all_cors}: Correlations of each fold
  \item \code{all_erros}: Errors of each fold
  \item \code{cv_basic_filter_check}: Number of signals passed the filter
}
}
\description{
This function performs cross-validation on the given data partitions using a
Support Vector Regression (SVR) model. It returns the average correlation
and root mean squared error over the partitions.
}
\examples{
data_partition_sample <- list(list(training = data.frame(feature1 = rnorm(20),
feature2 = rnorm(20), feature1_1 = rnorm(20)), validation = data.frame(
feature1 = rnorm(20), feature2 = rnorm(20), feature1_1 = rnorm(20))))
cross_validate_partition(cost = 1, nu = 0.5, gamma = NULL,
  data_partitions = data_partition_sample,
  bcv_folds = 1, signal_norm_names = c("feature1", "feature2"),
  predictors_norm_names = c("feature1"), lagged_cols = c("feature1"),
  combined_col_lags = c(1),
  vsvr_response = "feature2", vsvr_tolerance = 1,
  generate_response_predictions_cv = FALSE)

}
